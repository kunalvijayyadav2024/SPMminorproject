name: .NET Build, Test, and Publish (NewsPaper Projects)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Setup .NET SDK (you are using .NET 9.0)
    - name: Setup .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.305'

    # Step 3: Restore dependencies (API first, then WebApp)
    - name: Restore dependencies for API
      run: dotnet restore "E:/vs code/NewsPaperAPI/NewsPaperAPI.sln"

    - name: Restore dependencies for WebApp
      run: dotnet restore "E:/vs code/NewsPaperWebApp/NewsPaperWebApp.sln"

    # Step 4: Build both solutions (API first, then WebApp)
    - name: Build API
      run: dotnet build "E:/vs code/NewsPaperAPI/NewsPaperAPI.sln" --configuration Release --no-restore

    - name: Build WebApp
      run: dotnet build "E:/vs code/NewsPaperWebApp/NewsPaperWebApp.sln" --configuration Release --no-restore

    # Step 5: (Optional) Run tests if any test projects exist
    - name: Run Tests (API)
      run: dotnet test "E:/vs code/NewsPaperAPI/NewsPaperAPI.sln" --no-build --verbosity normal

    - name: Run Tests (WebApp)
      run: dotnet test "E:/vs code/NewsPaperWebApp/NewsPaperWebApp.sln" --no-build --verbosity normal

    # Step 6: Publish both projects (API first, then WebApp)
    - name: Publish API
      run: dotnet publish "E:/vs code/NewsPaperAPI/NewsPaperAPI.sln" -c Release -o ./publish/NewsPaperAPI

    - name: Publish WebApp
      run: dotnet publish "E:/vs code/NewsPaperWebApp/NewsPaperWebApp.sln" -c Release -o ./publish/NewsPaperWebApp

    # Step 7: Upload build artifacts
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-artifacts
        path: ./publish
